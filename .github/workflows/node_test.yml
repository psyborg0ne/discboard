# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Send start message to Discord
      id: discord_start
      run: |
        response=$(curl -s -X POST \
          -H "Authorization: Bot ${{ secrets.DISCORD_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"content": "üî® Build started for commit `${{ github.sha }}`"}' \
          "https://discord.com/api/v10/channels/${{ secrets.DISCORD_TEXT_DEV_CHANNEL_ID }}/messages")

        echo "id=$(echo $response | jq -r .id)" >> $GITHUB_OUTPUT

    - name: Install dependencies
      run: npm ci

    - name: Run Prettier check
      run: npm run format

    - name: Run ESLint
      run: npm run lint

    - name: Run build if exists
      run: npm run build --if-present

    - name: Run Jest tests
      run: npm test

    - name: Update message with result
      if: success()
      run: |
        curl -s -X PATCH \
          -H "Authorization: Bot ${{ secrets.DISCORD_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"content": "‚úÖ Build succeeded for commit `${{ github.sha }}`"}' \
          "https://discord.com/api/v10/channels/${{ secrets.DISCORD_TEXT_DEV_CHANNEL_ID }}/messages/${{ steps.discord_start.outputs.id }}"

    - name: Update message with failure
      if: failure()
      run: |
        curl -s -X PATCH \
          -H "Authorization: Bot ${{ secrets.DISCORD_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"content": "‚ùå Build failed for commit `${{ github.sha }}`"}' \
          "https://discord.com/api/v10/channels/${{ secrets.DISCORD_TEXT_DEV_CHANNEL_ID }}/messages/${{ steps.discord_start.outputs.id }}"